[
  {
    "timestamp": "Mon, 30 Oct 2023 17:56:17 GMT",
    "ip": "::1",
    "commandOutput": [
      "hashcat",
      ".\\hashcat.exe -h",
      ".\\hashcat.exe 2",
      "start .\\LaZagne.exe all",
      "neovim",
      "nvim",
      "ls",
      "clear",
      "type .\\unshadow.hashes",
      "clear",
      "ls",
      "type .\\unshadowed.cracked",
      "cat .\\unshadow.hashes",
      "clear",
      ".\\hashcat.exe",
      ".\\hashcat.exe --help",
      "netstat",
      "winget ",
      "winget search vim",
      "npm init",
      "code ",
      "code .",
      "npm install serialport",
      "node .\\index.js",
      "code .",
      "cd .\\arduino\\",
      "npm ",
      "npm list",
      "npm install body-parser",
      "node .\\index.js",
      "code .",
      "npm install express",
      "npm list ",
      "cd .\\mqtt\\",
      "npm list ",
      "npm install nodemon",
      "npm install mongoose",
      "node .\\index.js",
      "npm init",
      "npm install plotly",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\\"",
      "ls",
      "cd .\\Code\\",
      "npm list ",
      "npm install body-parser nodemon serialport",
      "code .",
      "code-tunnel.exe",
      "npm start",
      "npm start",
      "code .",
      "npm list ",
      "npm list ",
      "cd .\\web\\",
      "npm list",
      "npm install axios ",
      "npm install express --save",
      "npm install nodemon --save-dev",
      "code .",
      "npm start",
      "npm start",
      "code .",
      "npm start",
      "code .",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\Code>\"",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\Code\"",
      "clear",
      "ls",
      "cd .\\serialcapture\\",
      "ls",
      "npm init",
      "npm list ",
      "cd .\\api\\",
      "cd .\\serialcapture\\",
      "clear",
      "clear",
      "npm list ",
      "npm list ",
      "npm install serialport body-parser mongoose",
      "npm list ",
      "npm install nodemon",
      "npm install nodemon .\\node_modules\\",
      "npm install nodemon --save-dev",
      "npm start ",
      "npm start ",
      "npm start ",
      "exit",
      "cd .\\web\\",
      "npm init",
      "npm list",
      "npm install nodemon --save-dev express --save mongoose axios body-parser ",
      "code .",
      "clear",
      "clear",
      "clear",
      "code .",
      "npm start ",
      "npm start ",
      "npm start",
      "npm start",
      "npm start ",
      "npm start",
      "code .",
      "cd .\\web\\",
      "npm list",
      "cd ..",
      "cd .\\api\\",
      "npm list",
      "cd ..",
      "cd .\\web\\",
      "code .",
      "cd ..",
      "cd .\\serialcapture\\",
      "code .",
      "npm list",
      "cat .\\models\\",
      "cat .\\mqtt.js",
      "code .",
      "cd ..",
      "cd .\\serialcapture\\",
      "npm list",
      "cd ..",
      "cd .\\api\\",
      "npm list",
      "cd ..",
      "cd .\\serialcapture\\",
      "code .",
      "cd ..",
      "ls",
      "code .",
      "exit",
      "ecit",
      "exit",
      "cd .\\serialcapture\\",
      "clear",
      "cd .\\api\\",
      "cd .\\web\\",
      "clear",
      "npm start",
      "npm start",
      "CLEAR",
      "npm start",
      "code .",
      "npm init ",
      "touch iotsensor.js",
      "code .",
      "node .\\iotsensor.js",
      "clear",
      "npm install mongoose",
      "code .",
      "mkdir models",
      "cd .\\models\\",
      "clear",
      "cd ..",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "cd ..",
      "cd '.\\Task 4.2C\\'",
      "pip3 install jupyter notebook",
      "jupyter notebook",
      "pip3 install plotly",
      "code .",
      "cd .\\Code\\",
      "npm install plotly",
      "code .",
      "node .\\testplot.js",
      "node .\\iotsensor.js",
      "code .",
      "node .\\iotsensor.js",
      "npm install plotly",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "code .",
      "cat .\\sky-websense-ext.c",
      "cat cat .\\iotsensor.js",
      "cat .\\iotsensor.js",
      "code .",
      "node .\\iotsensor.js",
      "git clone https://github.com/DataBytes-Organisation/Project-Echo.git",
      "ls",
      "code .",
      "cat .\\send_email.php",
      "code .",
      "npm init",
      "npm install nodemailer",
      "code .",
      "clear",
      "node .\\index.js",
      "code .",
      "npm list",
      "npm -h",
      "npm -version",
      "grep mongo",
      "np list",
      "npm list",
      "cd ..",
      "cat .\\Server.bat",
      "cat .\\server.js",
      "npm list",
      "code .",
      "npm init",
      "mongod.exe",
      "ping 54.206.185.165:27017",
      "ping 54.206.185.165",
      "code .",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "lear",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "code .",
      "cd '.\\Code Local\\'",
      "cd '.\\Code Remote\\'",
      "clear",
      "clear",
      "node .\\iotsensor.js",
      "node .\\iotsensor.js",
      "code ",
      "code .",
      "cat .\\iotsensor.js",
      "exit",
      "clear",
      "clear",
      "clear",
      "ls",
      "cd .\\api\\",
      "cd .\\serialcapture\\",
      "cd .\\web\\",
      "npm start",
      "npm start",
      "clear",
      "npm start",
      "npm start",
      "npm start",
      "Code .",
      "git clone https://github.com/jpwa1k/Project-Echo.git",
      "ls",
      "cd ..",
      "ls",
      "code .",
      "npm list ",
      "ls",
      "cat .\\package.json",
      "npm install mongoose nodemon cors express",
      "code .",
      "npm i mongoose-validator -S",
      "npm list ",
      "npm install body-parser ",
      "code .",
      "npm start",
      "npm start",
      "npm install ",
      "npm install swagger-jdoc swagger-ui-express",
      "npm install swagger-jsdoc swagger-ui-express",
      "clear",
      "npm update",
      "npm fund",
      "npm start",
      "code .",
      "cd test",
      "ls",
      "npm list",
      "code .",
      "cd test",
      "npm init",
      "npm init",
      "npm init",
      "npm install axios ",
      "npm install jest",
      "code .",
      "cd '.\\Code Local\\'",
      "ls",
      "cat .\\iotsensor.js",
      "npm start",
      "clear",
      "ls",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "code .",
      "code ",
      "code .",
      "clear",
      "node .\\iotsensor.js",
      "clear",
      "node .\\iotsensor.js",
      "code .",
      "cd .\\portal-api-test\\",
      "code .",
      "ls",
      "npm start",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm test",
      "clear",
      "npm test",
      "clear",
      "npm test",
      "code .",
      "npm init",
      "npm install express",
      "code .",
      "node .\\client.js",
      "cat .\\client.js",
      "node .\\client.js",
      "code .",
      "npm init",
      "npm install express",
      "npm list ",
      "npm list ",
      "npm install mongoose modemon body-parser",
      "npm install mongoose nodemon body-parser",
      "code .",
      "cat .\\sensor.js",
      "code .",
      "npm start",
      "npm start",
      "ls",
      "npm list",
      "ping 54.89.71.211:5000",
      "ping 54.89.71.211:5000 ",
      "npm init",
      "code .",
      "npm install mongoose nodemon body-parser express",
      "npm install aios",
      "npm install axios",
      "npm start",
      "code .",
      "cd .\\client-1.js\\",
      "cd .\\client-2.js\\",
      "exit",
      "exit",
      "clear",
      "cd .\\client-1.js\\",
      "cd ..",
      "cd .\\client-2.js\\",
      "cd .\\client-3.js\\",
      "clear",
      "clear",
      "clear",
      "npm start",
      "npm start",
      "npm start",
      "ping google.com",
      "dig google.com",
      "whois google.com",
      "host",
      "host 128.184.20.21",
      "clear",
      "host 128.184.20.21",
      "host -t mx deakin.edu.au",
      "ping deakin.edu.au",
      "host localhost",
      "npm init ",
      "npm install express nodemon mongoose",
      "npm list ",
      "npm install axios",
      "tree .",
      "tree ",
      "code .",
      "codec. ",
      "clear",
      "code. ",
      "clear",
      "code .",
      "npm init",
      "ls",
      "npm install express",
      "code .",
      "npm start",
      "touch ",
      "node",
      "clear",
      "node --version",
      "celar",
      "clear",
      "docker build --tag node-docker .",
      "celar",
      "clear",
      "celar",
      "docker build --tag node-docker .",
      "docekr images",
      "docker images",
      "docker run node-docker",
      "docker run --publish 3000:3000 node-docker",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 6.2C\\Docker Code>\"",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 6.2C\\Docker Code\"",
      "ls",
      "clear",
      "ls",
      "docker build --tag node-docker .",
      "docker images",
      "docker run --publish 3000:3000 node-docker",
      "clear",
      "cat .\\Dockerfile",
      "cat .\\server.js",
      "cat .\\.dockerignore",
      "mqtt ",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/#",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/testing -m \"test\"",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /myid/device",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
      "device test\"",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/users -m \"my user`",
      "test\"",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
      "clear",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
      "device test\"",
      "clear",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
      "device test\"",
      "celar",
      "clang32.exe",
      "clear",
      "clear",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
      "device test\"",
      "npm init",
      "clear",
      "npm install mqtt",
      "code .",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 8.2P\\Code\"",
      "ls",
      "clear",
      "cd ..",
      "ls",
      "clear",
      "mkdir server",
      "cd .\\server\\",
      "npm init",
      "clear",
      "ls",
      "npm install mqtt",
      "clear",
      "code .",
      "clear",
      "cd \"{\"",
      "console.log(\"Topic is: \" + topic)",
      "console.log(\"Message is: \" + message)",
      "clear",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 8.2P\\Code\"",
      "cd..",
      "clear",
      "ls",
      "cd .\\server\\",
      "clear",
      "npm start",
      "npm start",
      "clear",
      "npm start",
      "code .",
      "explorer.exe",
      "explorer.exe ,",
      "explorer.exe .",
      "npm start",
      "code .",
      "host localhost",
      "npm init",
      "clea",
      "clear",
      "code .",
      "npm install multer path express crypto",
      "clear",
      "npm install ejs body-parser mongoose multer multer-gridfs-storage gridfs-stream method-override",
      "npm audit",
      "npm install nodemon --save-dev",
      "npm run dev",
      "ls",
      "npm install express",
      "npm run dev",
      "clear",
      "npm run dev",
      "npm start",
      "npm init",
      "npm install express",
      "npm install cors",
      "npm install multer",
      "code .",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "code .",
      "npm install multer",
      "npm install crypto",
      "npm start",
      "code .",
      "npm install mqtt",
      "code .",
      "code ,",
      "code .",
      "npm install mqtt",
      "npm start",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /drone-data",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
      "npm install nodemon --save-dev",
      "clear",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
      "clear",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
      "clear",
      "npm start",
      "clear",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
      "cleanmgr.exe",
      "clear",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
      "npm start",
      "clear",
      "npm start",
      "clear\\",
      "clear",
      "npm start",
      "clear",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "Get-CIMInstance -ClassName win32_DiskDrive",
      "code ,",
      "code .",
      "clear",
      "npm start ",
      "code .",
      "code ",
      "npm start ",
      "code .",
      "npm start",
      "ls",
      "cat .\\package-lock.json",
      "cat .\\package.json",
      "npm run test",
      "npm install --save jest supertest",
      "npm run test",
      "code .",
      "npm, start ",
      "npm start ",
      "dec .",
      "code .",
      "neovim",
      "nvim",
      "code .",
      "clear",
      "cd .\\apis\\",
      "cd .\\portal-api\\",
      "ls",
      "clear",
      "cd .\\web\\",
      "npm start",
      "npm i",
      "npm start",
      "npm install morgan ",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "cd ..",
      "code .",
      "npm start",
      "clear",
      "cd .\\web\\",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "npm start ",
      "npm start",
      "npm install nodemon --save-dev",
      "code .",
      "clear",
      "clear",
      "cd .\\apis\\",
      "cd .\\portal-api\\",
      "npm start ",
      "cd .\\web\\",
      "code .",
      "clear",
      "clear",
      "cd .\\web\\",
      "npm start ",
      "npm install nodemailer morgan ",
      "npm start ",
      "cd .\\apis\\",
      "cd .\\portal-api\\",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "cd .\\apis\\portal-api\\",
      "npm start ",
      "code .",
      "cd .\\web\\",
      "npm start",
      "clear",
      "npm start",
      "npm install randomstring",
      "npm start",
      "npm install dotenv",
      "npm start",
      "code .",
      "cd",
      "code .",
      "cd .\\api\\",
      "npm install express nodemon mongoose",
      "code .",
      "cd ..",
      "cd '.\\Task 8.2P\\'",
      "code .",
      "cd ..",
      "cd '.\\Task 8.3C\\'",
      "code .",
      "npm list ",
      "npm list",
      "npm init -y",
      "npm install node-pdm",
      "git clone https://github.com/atomic14/esp32_wireless_microphone.git",
      "cd .\\esp32_wireless_microphone\\",
      "code .",
      "cd .\\mqtt-api\\",
      "cd .\\mqtt\\",
      "npm list",
      "npm install body-parser express mongoose mqtt nodemon ",
      "npm init -y",
      "cd ..",
      "cd .\\api\\",
      "npm init -y",
      "scoop update windows-terminal",
      "exit",
      "cat .\\client.js",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/snort",
      "code .",
      "cd .\\apis\\portal-api\\",
      "npm start ",
      "cd .\\tests\\",
      "ls",
      "cd .\\portal-api-test\\",
      "clear",
      "npm run test",
      "clear",
      "npm start ",
      "npm run test",
      "npm start ",
      "npm, install dotenv",
      "npm install dotenv",
      "npm start ",
      "clear",
      "npm start ",
      "npm run test",
      "clear",
      "\"G:\\Software Engineering\\Semester 5\\SIT374 - Capstone Team Project (A)\\Hardhat Website - AppAttack\\website\\tests\"",
      "clear",
      "ls",
      "clear",
      "cd \"G:\\Software Engineering\\Semester 5\\SIT374 - Capstone Team Project (A)\\Hardhat Website - AppAttack\\website\\tests\"",
      "cd .\\portal-api-test\\",
      "celar",
      "clear",
      "npm run test",
      "npm start ",
      "cel;ar",
      "clear",
      "cel;ar",
      "clar",
      "clear",
      "npm run test",
      "nano",
      "ls",
      "cd .\\portal-api\\",
      "code .",
      "docker build -t web-api .",
      "docker build -t web-api .",
      "sudo docker run -p 6060:6060 web-api",
      "docker run -p 6060:6060 web-api",
      "clear",
      "code .",
      "ls",
      "cd .\\source-code\\",
      "cd .\\front-end\\",
      "ls",
      "clear",
      "npm init -y",
      "npm install react-bootstrap bootstrap",
      "yarn",
      "npm install express nodemon mongoose",
      "npm install react react-dom",
      "npm install react react-scripts",
      "cd ..",
      "cd .\\web-api\\",
      "npm i express",
      "npm i nodemon -D",
      "npm dev",
      "npm run dev",
      "npm i date-fns uuid",
      "npm run dev",
      "npm i cookie-parser",
      "npm i cors",
      "npm i dotenv",
      "code .",
      "ls",
      "cd .\\apis\\portal-api\\",
      "ls",
      "npm i",
      "code .",
      "code .",
      "cd ..",
      "clear",
      "code .",
      "code ..",
      "cd ..",
      "clear",
      "ls",
      "code .",
      "ls",
      "cd .\\web-api\\",
      "npm i express-async-handler bcrypt",
      "code .",
      "clear",
      "npm run dev",
      "ls",
      "cd .\\web-api\\",
      "npm run dev",
      "celar",
      "clear",
      "npm run dev",
      "clear",
      "npm run dev",
      "code .",
      "npx create-react-app my-react-app",
      "npx create-react-app smart-lighting",
      "npm strat ",
      "npm start",
      "clear",
      "cd .\\smart-lighting\\",
      "npm start",
      "clear",
      "npm i react-router--dom",
      "npm i react-router-dom",
      "clear",
      "npm install react-bootstrap bootstrap",
      "git clone https://github.com/gitdagray/mern_stack_course.git",
      "cd .\\mern_stack_course\\",
      "code .",
      "cd .\\apis\\portal-api\\",
      "npm start",
      "ls",
      "npm start",
      "npm i",
      "npm start",
      "code .",
      "npm start",
      "npm i react-router--dom",
      "npm run dev",
      "clear",
      "ls",
      "cd .\\front-end\\",
      "ls",
      "cd .\\smart-lighting\\",
      "lsd",
      "ls",
      "npm start",
      "code .",
      "npm start",
      "cd .\\front-end\\",
      "ls",
      "cd .\\smart-lighting\\",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "cd .\\front-end\\smart-lighting\\",
      "npm start",
      "npm i spline",
      "npm start",
      "npm i @reduxjs/toolkit react-redux ",
      "ls",
      "cd .\\web-api\\",
      "ls",
      "npm start ",
      "cd .\\front-end\\smart-lighting\\",
      "npm start",
      "clear",
      "code .",
      "cd ..",
      "ls",
      "code .",
      "npm start ",
      "clear",
      "ls",
      "cd .\\front-end\\",
      "ls",
      "cd .\\smart-lighting\\",
      "npm start",
      "cd..",
      "ls",
      "cd .\\web-api\\",
      "clear",
      "npm start",
      "npm run dev",
      "code .",
      "ls",
      "cd test",
      "clear",
      "npm init -y",
      "code .",
      "ls",
      "cd .\\web-api\\",
      "ls",
      "cd .\\front-end\\smart-lighting\\",
      "clear",
      "npm start ",
      "code .",
      "npm start ",
      "npm start ",
      "code .",
      "npm start ",
      "npm run dev",
      "code .",
      "ls",
      "cd .\\web\\",
      "ls",
      "npm run",
      "npm start",
      "code .",
      "cd .\\front-end\\",
      "ls",
      "npm init ",
      "npm install express nodemon ",
      "code .",
      "la",
      "ls",
      "npm start ",
      "npm install cors",
      "npm start ",
      "code .",
      "npm init -y",
      "npm install nodemon --save-dev express mongoose mqtt",
      "npm start",
      "npm start",
      "npm install nodemon --save-dev express mongoose mqtt",
      "npm start",
      "clear",
      "npm start",
      "yes",
      "npm start",
      "yes",
      "npm start",
      "code .",
      "npm start",
      "code .",
      "npm start",
      "code .",
      "npm start",
      "code .",
      "clear",
      "npm start",
      "code .",
      "npm init -y",
      "npm install mqtt",
      "code .",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/1/battery -m \"{battery:5}\"",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/2/battery -m \"{battery:5}\"",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/2/battery -m \"{battery:5}\"",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m \"{battery:5}\"",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m \"{battery:5}\"",
      "npm start",
      "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m {battery:5}",
      "npm start",
      "mqtt subscribe -h broker.hivemq.com -p 1883 -t /drones/1/battery",
      "npm start",
      "npm init -y",
      "npm install mqtt",
      "code .",
      "npm start",
      "npm install nodemon",
      "npm start",
      "npm install nodemon",
      "npm start",
      "clear",
      "npm start",
      "clear",
      "clear",
      "npm start",
      "clear",
      "npm start ",
      "clear",
      "npm start",
      "cd .\\server\\",
      "npm start",
      "cd .\\drone\\",
      "npm start",
      "node .\\client.js",
      "clear",
      "clear",
      "npm start",
      "node .\\client.js",
      "node .\\client.js",
      "code .",
      "code.",
      "code .",
      "git clone https://github.com/microsoft/vcpkg.git",
      "cd .\\vcpkg\\",
      "ls",
      "cd ..",
      "rm -r .\\vcpkg\\",
      "explorer.exe .",
      "rm -r .\\vcpkg\\",
      "git clone https://github.com/microsoft/vcpkg.git",
      "cd .\\vcpkg\\",
      "bootstrap-vcpkg.bat",
      ".\\bootstrap-vcpkg.bat",
      ".\\vcpkg.exe install 7zip",
      ".\\vcpkg.exe integrate install",
      "tree .",
      "net localgoup",
      "net localgroup",
      "net user charanpreet singh",
      "net user charanpreet",
      "npm init -y",
      "code .",
      "npm install express nodemon ",
      "code .",
      "npm run dev",
      "npm install mongoose body-parser",
      "code .",
      "npm run dev",
      "code .",
      "npm help",
      "npm uninstall mongoose",
      "npm uninstall body-parser",
      "clear",
      "npm uninstall body-parser",
      "npm run dev",
      "npm install express express-session cookie-parser",
      "npm run dev",
      "npm install express mongoose nodemon",
      "npm init -y",
      "npm install express mongoose nodemon",
      "code .",
      "npm start",
      "npm run dev",
      "clear",
      "npm start",
      "clear",
      "npm start",
      "npm rund ev",
      "npm run dev",
      "npm run dev",
      "clear",
      "clear",
      "npm start",
      "npm start",
      "Hostname",
      "(Get-WmiObject Win32_OperatingSystem).Caption",
      "Get-WmiObject",
      "Get-ComputerInfo  | select windowsversion",
      "(Get-CimInstance Win32_operatingsystem).OSArchitecture",
      "Get-ComputerInfo | Select-Object OSName",
      "Get-ComputerInfo | Select-Object OSName, WindowsVersion",
      "Get-ComputerInfo | Select-Object OSName, WindowsVersion, OsArchitecture",
      "Get-LocalUser",
      "Get-WmiObject -Class Win32_Product",
      "Get-WinEvent -ProviderName msiinstaller | where id -eq 1033 | select timecreated,message | FL *",
      "$InstalledSoftware = Get-ChildItem \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\"",
      "foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host \" - \" -NoNewline; write-host $obj.GetValue('DisplayVersion')}",
      "$InstalledSoftware = Get-ChildItem \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\"",
      "foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host \" - \" -NoNewline; write-host $obj.GetValue('DisplayVersion')}",
      "Get-WebApplicationProxyConfiguration",
      "[System.Net.WebProxy]::GetDefaultProxy() | select address",
      "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\"",
      "netsh winhttp show proxy",
      "    Get-ChildItem HKCU:\\Software\\SimonTatham\\PuTTY\\Sessions",
      "Get-History",
      "Get-ChildItem 'HKCU:\\Software\\SimonTatham\\PuTTY\\Sessions'",
      "Get-Item -Path \"Registry::KHEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
      "Get-Item -Path \"Registry::HCEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers\\\" | ft",
      "Get-RDUserSession -ConnectionBroker \"rdcb.contoso.com\"",
      "code .",
      "Get-EventLog security -after (Get-date -hour 0 -minute 0 -second 0) | ?{$_.eventid -eq 4624 -and $_.Message -match 'logon type:\\s+(10)\\s'} | Out-GridView",
      "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Server\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers\\\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
      "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" | Select ProxyServer, ProxyEnable | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\"",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\" | ft",
      "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Jumplist\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit\" | ft",
      "Get-Item -Path Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit\" | ft",
      "Get-LocalUser",
      "Get-WinEvent -ProviderName msiinstaller | where id -eq 1033 | select timecreated,message | FL *",
      "ls",
      ".\\code.ps1",
      "Get-LocalUser",
      ".\\code.ps1",
      "code .",
      "rsync",
      "npm init -y",
      "code .",
      "npm install body-parser express ",
      "npm install nodemon",
      "code .",
      "npm start",
      "ls",
      "npm start",
      "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
      "const express = require('express');",
      "const bodyParser = require('body-parser');",
      "const fs = require('fs');",
      "const app = express();",
      "const port = process.env.PORT || 3000;",
      "// Create a write stream to the log file",
      "const logStream = fs.createWriteStream('api_logs.txt', { flags: 'a' });",
      "// Parse JSON request body",
      "app.use(bodyParser.json());",
      "// Define a route to handle the POST request",
      "app.post('/api/endpoint', (req, res) => {`",
      "    const { CommandOutput } = req.body;`",
      "`",
      "    // Get the IP address from which the request is generated`",
      "    const clientIp = req.ip;`",
      "`",
      "    // Log the IP address and received command output to the log file`",
      "    const logData = `${new Date().toUTCString()} - IP: ${clientIp}, CommandOutput: ${JSON.stringify(CommandOutput)}\\n`;`",
      "    logStream.write(logData);`",
      "`",
      "    // Respond with a success message`",
      "    res.status(200).json({ message: 'Command output received successfully' });`",
      "});",
      "// Start the Express server",
      "app.listen(port, () => {`",
      "    console.log(`Server is running on port ${port}`);`",
      "});",
      "npm install fs --save`",
      "",
      "npm start",
      "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
      "npm start",
      "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
      "Get-Date  | ConvertTo-Json",
      "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
      "npm start",
      "powershell --version",
      "powershell -v",
      "powershell -h",
      "powershell -Version",
      "Powershell -Version",
      "Powershell | -Help | -Version",
      "$PSVersionTable.PSVersion",
      "netsh winhttp show proxy",
      "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\"",
      "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" | Select ProxyServer, ProxyEnable | ft",
      "npm start",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Jumplist\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\" | ft",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
      "Get-History",
      "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU\" | ft",
      "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt | Select-String \"keyword\"",
      "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt ",
      "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt",
      "cat (Get-PSReadlineOption).HistorySavePath",
      "(Get-PSReadlineOption).HistorySavePath",
      "cat (Get-PSReadlineOption).HistorySavePath",
      " (Get-PSReadlineOption).HistorySavePath",
      "clear",
      "cat (Get-PSReadlineOption).HistorySavePath",
      ".\\code.ps1",
      "cat (Get-PSReadlineOption).HistorySavePath",
      "clear",
      "cat (Get-PSReadlineOption).HistorySavePath",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "Get-Content (Get-PSReadlineOption).HistorySavePath",
      ".\\code.ps1",
      "npm start",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      "cat (Get-PSReadlineOption).HistorySavePath",
      "clear",
      "Get-Content (Get-PSReadlineOption).HistorySavePath",
      "Get-History | Format-List -Property *",
      "Get-Content (Get-PSReadlineOption).HistorySavePath  | Format-List -Property *",
      "Get-Content (Get-PSReadlineOption).HistorySavePath\u0002",
      "Get-Content (Get-PSReadlineOption).HistorySavePath",
      "clear",
      "Get-Content (Get-PSReadlineOption).HistorySavePath",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "npm start",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1",
      "clear",
      ".\\code.ps1"
    ]
  }
]