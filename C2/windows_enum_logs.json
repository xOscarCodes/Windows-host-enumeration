[
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:35 GMT",
    "ip": "::1",
    "commandOutput": {
      "hostname": "Charandesk"
    }
  },
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:37 GMT",
    "ip": "::1",
    "commandOutput": {
      "OS-Details": {
        "OsName": "Microsoft Windows 10 Home Single Language",
        "WindowsVersion": "2009",
        "OsArchitecture": "64-bit"
      }
    }
  },
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:37 GMT",
    "ip": "::1",
    "commandOutput": {
      "localUsers": [
        {
          "AccountExpires": null,
          "Description": "Built-in account for administering the computer/domain",
          "Enabled": false,
          "FullName": "",
          "PasswordChangeableDate": null,
          "PasswordExpires": null,
          "UserMayChangePassword": true,
          "PasswordRequired": true,
          "PasswordLastSet": "2021-07-25T18:46:32.436811+10:00",
          "LastLogon": null,
          "Name": "Administrator",
          "SID": "S-1-5-21-3892227347-947772887-2691324519-500",
          "PrincipalSource": 1,
          "ObjectClass": "User"
        },
        {
          "AccountExpires": null,
          "Description": "",
          "Enabled": true,
          "FullName": "CHARANPREET SINGH",
          "PasswordChangeableDate": "2021-07-13T06:46:33.1275195+10:00",
          "PasswordExpires": null,
          "UserMayChangePassword": true,
          "PasswordRequired": true,
          "PasswordLastSet": "2021-07-13T06:46:33.1275195+10:00",
          "LastLogon": null,
          "Name": "chara",
          "SID": "S-1-5-21-3892227347-947772887-2691324519-1001",
          "PrincipalSource": 4,
          "ObjectClass": "User"
        },
        {
          "AccountExpires": null,
          "Description": "A user account managed by the system.",
          "Enabled": false,
          "FullName": "",
          "PasswordChangeableDate": null,
          "PasswordExpires": null,
          "UserMayChangePassword": true,
          "PasswordRequired": false,
          "PasswordLastSet": "2021-07-25T18:46:32.5445236+10:00",
          "LastLogon": null,
          "Name": "DefaultAccount",
          "SID": "S-1-5-21-3892227347-947772887-2691324519-503",
          "PrincipalSource": 1,
          "ObjectClass": "User"
        },
        {
          "AccountExpires": null,
          "Description": "Built-in account for guest access to the computer/domain",
          "Enabled": false,
          "FullName": "",
          "PasswordChangeableDate": null,
          "PasswordExpires": null,
          "UserMayChangePassword": false,
          "PasswordRequired": false,
          "PasswordLastSet": null,
          "LastLogon": null,
          "Name": "Guest",
          "SID": "S-1-5-21-3892227347-947772887-2691324519-501",
          "PrincipalSource": 1,
          "ObjectClass": "User"
        },
        {
          "AccountExpires": null,
          "Description": "A user account managed and used by the system for Windows Defender Application Guard scenarios.",
          "Enabled": false,
          "FullName": "",
          "PasswordChangeableDate": "2021-07-13T19:11:59.7554831+10:00",
          "PasswordExpires": "2021-08-24T19:11:59.7554831+10:00",
          "UserMayChangePassword": true,
          "PasswordRequired": true,
          "PasswordLastSet": "2021-07-13T19:11:59.7554831+10:00",
          "LastLogon": null,
          "Name": "WDAGUtilityAccount",
          "SID": "S-1-5-21-3892227347-947772887-2691324519-504",
          "PrincipalSource": 1,
          "ObjectClass": "User"
        }
      ]
    }
  },
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:37 GMT",
    "ip": "::1",
    "commandOutput": {
      "Inventory of Installed Software": {
        "Microsoft .NET Host FX Resolver - 7.0.0 (x64)": "56.3.50341",
        "vs_communityx64msi": "17.7.33906",
        "nvcc": "12.0",
        "Microsoft Windows Desktop Runtime - 6.0.3 (x64)": "48.15.37635",
        "IntelliTraceProfilerProxy": "15.0.21225.01",
        "Java(TM) SE Development Kit 11.0.19 (64-bit)": "11.0.19.0",
        "Microsoft .NET Targeting Pack - 6.0.1 (x64)": "48.7.32725",
        "Microsoft .NET Toolset 7.0.402 (x64)": "28.6.54813",
        "Recuva": "1.53",
        "Microsoft .NET AppHost Pack - 7.0.12 (x64_x86)": "56.48.2548",
        "Windows Driver Package - Google, Inc. (WinUSB) AndroidUsbDeviceClass  (08/28/2014 11.0.0000.00000)": "08/28/2014 11.0.0000.00000",
        "Microsoft.NET.Sdk.tvOS.Manifest-7.0.100 (x64)": "16.4.7107",
        "Microsoft .NET AppHost Pack - 6.0.23 (x64_arm)": "48.92.2594",
        "Oracle VM VirtualBox 7.0.12": "7.0.12",
        "Adobe Acrobat (64-bit)": "23.006.20360",
        "MiniTool Partition Wizard Free 12.5": "12.5",
        "NVIDIA Session Container": "1.37",
        "Windows Driver Package - Silicon Laboratories Inc. (silabser) Ports  (05/23/2018 6.7.6.2130)": "05/23/2018 6.7.6.2130",
        "NVIDIA NVAPI Monitor plugin for NvContainer": "1.0",
        "NVIDIA SHIELD Streaming": "7.1.32193813",
        "Microsoft .NET Toolset 6.0.101 (x64)": "24.3.60296",
        "Microsoft .NET Core Host FX Resolver - 3.1.22 (x64)": "24.88.30721",
        "Windows App Certification Kit Native Components": "10.1.22000.832",
        "icecap_collection_x64": "17.7.33905",
        "Microsoft.NET.Sdk.Android.Manifest-6.0.200": "124.50.2",
        "Microsoft.NET.Workload.Emscripten.net7.Manifest (x64)": "56.48.1010",
        "Microsoft.NET.Sdk.Maui.Manifest-7.0.100 (x64)": "7.0.96",
        "ASUS MultiAntenna Service": "3.1.0",
        "Microsoft .NET Runtime - 7.0.12 (x64)": "56.48.2548",
        "Microsoft .NET Host - 6.0.10 (x64)": "48.43.48869",
        "Windows Driver Package - SAMSUNG Electronics Co., Ltd.  (ssudmdm) Modem  (12/02/2015 2.12.1.0)": "12/02/2015 2.12.1.0",
        "NVIDIA Watchdog Plugin for NvContainer": "1.37",
        "Microsoft .NET AppHost Pack - 6.0.23 (x64)": "48.92.2594",
        "Microsoft ASP.NET Core 5.0.0 Targeting Pack (x64)": "5.0.0.20526",
        "Microsoft .NET 6.0 Templates 7.0.402 (x64)": "24.7.54813",
        "Microsoft .NET AppHost Pack - 5.0.10 (x64)": "40.40.30412",
        "VMware Workstation": "17.0.0",
        "CURAND Runtime": "12.0",
        "Microsoft .NET AppHost Pack - 6.0.1 (x64_arm)": "48.7.32725",
        "Microsoft .NET SDK 6.0.200 (x64) from Visual Studio": "6.2.22.10605",
        "Microsoft Windows Desktop Targeting Pack - 7.0.12 (x64)": "56.48.2562",
        "Python 3.9.6 Tcl/Tk Support (64-bit)": "3.9.6150.0",
        "Microsoft .NET AppHost Pack - 6.0.2 (x64_x86)": "48.11.35878",
        "Microsoft .NET AppHost Pack - 7.0.12 (x64)": "56.48.2548",
        "Microsoft Windows Desktop Targeting Pack - 6.0.23 (x64)": "48.92.2594",
        "Microsoft Visual C++ 2022 X64 Minimum Runtime - 14.36.32532": "14.36.32532",
        "ARMOURY CRATE Service": "5.7.3",
        "Microsoft.NET.Sdk.Android.Manifest-7.0.100 (x64)": "33.0.68",
        "Python 3.9.6 Standard Library (64-bit)": "3.9.6150.0",
        "Microsoft .NET Runtime - 6.0.1 (x64)": "48.7.32725",
        "Python 3.9.6 Utility Scripts (64-bit)": "3.9.6150.0",
        "Microsoft Visual C++ 2012 x64 Additional Runtime - 11.0.61030": "11.0.61030",
        "NVIDIA Graphics Driver 531.18": "531.18",
        "Microsoft Visual C++ 2022 X64 Debug Runtime - 14.36.32532": "14.36.32532",
        "Microsoft ASP.NET Core 6.0.0 Targeting Pack (x64)": "6.0.0.21526",
        "NVIDIA Backend": "39.5.0.0",
        "CrystalDiskMark 8.0.4a": "8.0.4a",
        "Microsoft .NET Core Runtime - 3.1.22 (x64)": "24.88.30721",
        "Python 3.9.6 Core Interpreter (64-bit)": "3.9.6150.0",
        "Microsoft .NET AppHost Pack - 6.0.1 (x64)": "48.7.32725",
        "CUDA Profiler API": "12.0",
        "NVJPEG Development": "12.0",
        "Microsoft.NET.Workload.Emscripten.Manifest": "48.27.37284",
        "Microsoft Windows Desktop Runtime - 3.1.22 (x64)": "24.88.30721",
        "Microsoft.NET.Workload.Emscripten.net6.Manifest (x64)": "56.48.1010",
        "Microsoft .NET AppHost Pack - 5.0.10 (x64_arm)": "40.40.30412",
        "NVIDIA Telemetry Client": "17.1.7.0",
        "Application Verifier x64 External Package": "10.1.22000.832",
        "Microsoft .NET AppHost Pack - 6.0.1 (x64_x86)": "48.7.32725",
        "Microsoft Visual C++ 2012 x64 Minimum Runtime - 11.0.61030": "11.0.61030",
        "Microsoft.NET.Workload.Mono.Toolchain.net6.Manifest (x64)": "56.48.2548",
        "Canon MF4320-4350": null,
        "Windows Driver Package - SEGGER (JLinkCDC) Ports  (06/06/2019 1.34.0.44950)": "06/06/2019 1.34.0.44950",
        "Microsoft.NET.Sdk.macOS.Manifest-6.0.200": "48.50.4",
        "Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.6161": "9.0.30729.6161",
        "Microsoft .NET Toolset 5.0.401 (x64)": "20.3.62206",
        "ASUS Aac_NBDT HAL": "2.5.24.0",
        "LightBurn version 1.3.01": "1.3.01",
        "Neovim": "0.8.2",
        "Microsoft.NET.Sdk.MacCatalyst.Manifest-7.0.100 (x64)": "16.4.7107",
        "TAP-Windows 9.24.2": "9.24.2",
        "Microsoft Windows Desktop Runtime - 6.0.23 (x64)": "48.92.2594",
        "NVIDIA GPX Common OSS binaries (POCO, OpenSSL, libprotobuf)": "7.1",
        "ASUS Aura SDK": "3.04.39",
        "NVIDIA Nsight Visual Studio Edition 2022.4.0.22322": "22.4.0.22322",
        "Microsoft .NET Host - 7.0.12 (x64)": "56.48.2548",
        "NVIDIA TelemetryApi helper for NvContainer": "1.37",
        "NVIDIA Update Core": "39.5.0.0",
        "Microsoft Visual C++ 2013 x64 Additional Runtime - 12.0.40664": "12.0.40664",
        "NVIDIA CUDA Documentation 12.0": "12.0",
        "NVIDIA LocalSystem Container": "1.37",
        "Microsoft .NET Host FX Resolver - 5.0.13 (x64)": "40.52.30715",
        "NVIDIA CUDA Runtime 12.0": "12.0",
        "Microsoft Visual Studio Installer": "3.7.2181.36443",
        "Microsoft .NET Host - 5.0.13 (x64)": "40.52.30715",
        "Microsoft .NET Host - 5.0.10 (x64)": "40.40.30412",
        "nvprune": "12.0",
        "CUDA CCCL": "12.0",
        "Microsoft .NET AppHost Pack - 6.0.2 (x64)": "48.11.35878",
        "Windows SDK DirectX x64 Remote": "10.1.22000.832",
        "Java 8 Update 311 (64-bit)": "8.0.3110.11",
        "${{arpDisplayName}}": "12.0",
        "Microsoft .NET Runtime - 6.0.2 (x64)": "48.11.35878",
        "DaVinci Resolve": "18.0.20007",
        "Microsoft .NET AppHost Pack - 7.0.12 (x64_arm)": "56.48.2548",
        "Microsoft.NET.Sdk.macOS.Manifest-6.0.100": "48.25.16415",
        "Microsoft .NET AppHost Pack - 5.0.10 (x64_x86)": "40.40.30412",
        "NVIDIA USBC Driver 1.50.831.832": "1.50.831.832",
        "Microsoft Update Health Tools": "3.73.0.0",
        "WinRAR 6.02 (64-bit)": "6.02.0",
        "NVIDIA Message Bus for NvContainer": "1.34",
        "CURAND Development": "12.0",
        "Microsoft Windows Desktop Runtime - 5.0.13 (x64)": "40.52.30717",
        "Microsoft .NET AppHost Pack - 7.0.12 (x64_arm64)": "56.48.2548",
        "Strawberry Perl (64-bit)": "5.32.1001",
        "Audacity 3.1.3": "3.1.3",
        "Python 3.9.6 Executables (64-bit)": "3.9.6150.0",
        "Update for Windows 10 for x64-based Systems (KB5001716)": "8.93.0.0",
        "NVIDIA Virtual Audio 4.49.0.0": "4.49.0.0",
        "vs_Graphics_Singletonx64": "17.7.33906",
        "NVIDIA User Container": "1.37",
        "Microsoft Windows Desktop Runtime - 5.0.10 (x64)": "40.40.30418",
        "OpenSSL 3.0.8 (64-bit)": "3.0.8",
        "Microsoft .NET Host FX Resolver - 7.0.12 (x64)": "56.48.2548",
        "Microsoft ASP.NET Core 7.0.12 Targeting Pack (x64)": "7.0.12.23479",
        "Microsoft .NET Runtime - 6.0.3 (x64)": "48.15.37625",
        "Microsoft Windows Desktop Targeting Pack - 6.0.2 (x64)": "48.11.35878",
        "vs_devenx64vmsi": "17.7.33905",
        "NVIDIA CUDA Development 12.0": "12.0",
        "PowerToys (Preview)": "0.68.1",
        "Microsoft .NET AppHost Pack - 6.0.23 (x64_x86)": "48.92.2594",
        "Microsoft Windows Desktop Targeting Pack - 5.0.0 (x64)": "40.0.29420",
        "Microsoft .NET AppHost Pack - 5.0.10 (x64_arm64)": "40.40.30412",
        "CUSOLVER Runtime": "12.0",
        "Microsoft ASP.NET Core 6.0.23 Targeting Pack (x64)": "6.0.23.23480",
        "VS Script Debugging Common": "17.0.125.0",
        "Apache Tomcat 9.0 Tomcat9 (remove only)": "9.0.78",
        "Microsoft.NET.Sdk.Android.Manifest-6.0.100": "124.25.16400",
        "ROG Live Service": "2.2.5.0",
        "NVIDIA Nsight Compute 2022.4.0": "22.4.0.0",
        "NVIDIA CUDA Visual Studio Integration 12.0": "12.0",
        "Demo Suite": "12.0",
        "Python 3.9.6 Test Suite (64-bit)": "3.9.6150.0",
        "NVIDIA PhysX System Software 9.21.0713": "9.21.0713",
        "EasyUEFI version 3.8": "3.8",
        "Microsoft Visual C++ 2005 Redistributable (x64)": "8.0.56336",
        "Blackmagic RAW Common Components": "2.6",
        "Windscribe": "2.6.14",
        "NVJITLINK Runtime": "12.0",
        "Microsoft.NET.Workload.Mono.Toolchain.Manifest": "48.3.32725",
        "CUSOLVER Development": "12.0",
        "Microsoft SQL Server Compact 3.5 SP2 x64 ENU": "3.5.8080.0",
        "Microsoft ASP.NET Core 6.0.2 Shared Framework (x64)": "6.0.2.22064",
        "paint.net": "4.3.12",
        "NPP Development": "12.0",
        "Microsoft.NET.Sdk.MacCatalyst.Manifest-6.0.100": "60.25.16415",
        "Everything 1.4.1.1009 (x64)": "1.4.1.1009",
        "Windows Driver Package - SAMSUNG Electronics Co., Ltd.  (dg_ssudbus) USB  (12/02/2015 2.12.1.0)": "12/02/2015 2.12.1.0",
        "Microsoft.NET.Sdk.MacCatalyst.Manifest-6.0.200": "60.50.4",
        "Windows Driver Package - Segger (jlink) USB  (08/02/2018 2.70.08.0)": "08/02/2018 2.70.08.0",
        "vs_minshellx64msi": "17.7.33905",
        "Python 3.9.6 pip Bootstrap (64-bit)": "3.9.6150.0",
        "Microsoft .NET Targeting Pack - 5.0.0 (x64)": "40.0.29513",
        "OpenVPN 2.5.8-I604 amd64": "2.5.040",
        "AURA lighting effect add-on x64": "0.0.39",
        "Microsoft .NET Targeting Pack - 6.0.23 (x64)": "48.92.2594",
        "Microsoft.NET.Sdk.iOS.Manifest-7.0.100 (x64)": "16.4.7107",
        "Microsoft .NET Core 5.0 Templates 5.0.401 (x64)": "20.3.45822",
        "Microsoft .NET 7.0 Templates 7.0.402 (x64)": "28.7.54813",
        "NVIDIA Container": "1.37",
        "Microsoft .NET AppHost Pack - 6.0.2 (x64_arm64)": "48.11.35878",
        "OPENCL Runtime": "12.0",
        "ASUS HID Control Service": "1.2.0",
        "Samsung USB Driver for Mobile Phones": "1.7.58.0",
        "Microsoft.NET.Sdk.Maui.Manifest-6.0.200": "24.50.2441",
        "Windows Driver Package - SAMSUNG Electronics Co., Ltd.  (WinUSB) AndroidUsbDeviceClass  (12/02/2015 2.12.1.0)": "12/02/2015 2.12.1.0",
        "Mozilla Firefox (x64 en-US)": "119.0",
        "NVIDIA Virtual Host Controller": "3.05.0.1",
        "MongoDB 6.0.4 2008R2Plus SSL (64 bit)": "6.0.4",
        "Microsoft Visual C++ 2013 x64 Minimum Runtime - 12.0.40664": "12.0.40664",
        "Sublime Text": null,
        "NVIDIA Optimus Update 39.5.0.0": "39.5.0.0",
        "Microsoft Build of OpenJDK with Hotspot 11.0.16.1+1 (x64)": "11.0.16.101",
        "Epic Games Launcher Prerequisites (x64)": "1.0.0.0",
        "Microsoft Office Professional Plus 2019 - en-us": "16.0.10403.20013",
        "Microsoft .NET Host FX Resolver - 6.0.1 (x64)": "48.7.32725",
        "Microsoft ASP.NET Core 6.0.2 Targeting Pack (x64)": "6.0.2.22064",
        "NVVM Samples": "12.0",
        "NVML Development": "12.0",
        "Microsoft.NET.Sdk.iOS.Manifest-6.0.100": "60.25.16415",
        "ASUS Aac_GmAcc HAL": "1.0.12.0",
        "Microsoft Windows Desktop Runtime - 7.0.0 (x64)": "56.3.50353",
        "Microsoft Visual C++ 2022 X64 Additional Runtime - 14.36.32532": "14.36.32532",
        "Recorder Devices for ShareX 0.12.10": "0.12.10",
        "Office 16 Click-to-Run Licensing Component": "16.0.10403.20013",
        "GameFirst VI": "6.1.11.1",
        "NVRTC Development": "12.0",
        "PuTTY release 0.77 (64-bit)": "0.77.0.0",
        "MongoDB Tools 100": "100.6.1",
        "Microsoft ASP.NET Core 5.0.10 Shared Framework (x64)": "5.0.10.21410",
        "Microsoft .NET Runtime - 7.0.0 (x64)": "56.3.50341",
        "Microsoft .NET Core Host - 3.1.22 (x64)": "24.88.30721",
        "NVJPEG Runtime": "12.0",
        "SMPlayer 21.8.0 (x64)": "21.8.0",
        "CUDA Toolkit": "12.0",
        "Microsoft .NET Host FX Resolver - 6.0.2 (x64)": "48.11.35878",
        "vs_minshellinteropx64msi": "17.7.33905",
        "Occupancy Calculator": "12.0",
        "blender": "3.3.1",
        "Aura Wallpaper Service": "1.5.3.0",
        "Visual Profiler": "12.0",
        "Microsoft .NET Runtime - 5.0.13 (x64)": "40.52.30715",
        "Disassembler": "12.0",
        "Microsoft .NET Targeting Pack - 6.0.2 (x64)": "48.11.35878",
        "Windows Subsystem for Linux Update": "5.10.16",
        "System Mechanic": "20.7.1.34",
        "7-Zip 22.01 (x64)": "22.01",
        "CUDA Profiler Tools": "12.0",
        "NVIDIA HD Audio Driver 1.3.40.14": "1.3.40.14",
        "DiagnosticsHub_CollectionService": "17.3.32601",
        "NVIDIA Install Application": "2.1002.390.0",
        "XnConvert 1.92.0": "1.92.0",
        "Cisco Packet Tracer 7.3.0 64Bit": null,
        "NVRTC Runtime": "12.0",
        "Windows PC Health Check": "3.6.2204.08001",
        "Google Drive": "82.0.1.0",
        "cuobjdump": "12.0",
        "psqlODBC_x64": "09.06.0504",
        "Microsoft ASP.NET Core 6.0.23 Shared Framework (x64)": "6.0.23.23480",
        "DaVinci Resolve Control Panels": "2.0.3.0",
        "Microsoft ASP.NET Core 6.0.1 Shared Framework (x64)": "6.0.1.21567",
        "VS JIT Debugger": "17.0.125.0",
        "EasyEDA": "6.5.20",
        "NVIDIA GeForce Experience 3.27.0.112": "3.27.0.112",
        "NVTX Development": "12.0",
        "Office 16 Click-to-Run Localization Component": "16.0.10403.20013",
        "Python 3.9.6 Development Libraries (64-bit)": "3.9.6150.0",
        "Microsoft.NET.Sdk.Maui.Manifest-6.0.100": "24.25.18189",
        "Office 16 Click-to-Run Extensibility Component": "16.0.10403.20013",
        "Microsoft ASP.NET Core 7.0.12 Shared Framework (x64)": "7.0.12.23479",
        "NPP Runtime": "12.0",
        "Oracle Database 11g Express Edition": "11.2.0",
        "UrbanVPN": "2.2.14.6",
        "Windows Driver Package - SEGGER Microcontroller GmbH (WinUSB) USBDevice  (06/14/2019 3.00.00.000)": "06/14/2019 3.00.00.000",
        "CUDA Documentation": "12.0",
        "Microsoft .NET 6.0 Templates 6.0.101 (x64)": "24.3.60296",
        "Microsoft .NET Runtime - 5.0.10 (x64)": "40.40.30412",
        "Nvidia Share": "3.27.0.112",
        "NVIDIA Nsight Systems 2022.4.2": "22.4.2.18",
        "Microsoft .NET Targeting Pack - 7.0.12 (x64)": "56.48.2548",
        "CUFFT Development": "12.0",
        "Microsoft Windows Desktop Runtime - 6.0.2 (x64)": "48.11.35878",
        "Microsoft .NET 6.0 Templates 6.0.200 (x64)": "24.4.48461",
        "Microsoft .NET Host FX Resolver - 6.0.3 (x64)": "48.15.37625",
        "Windows Driver Package - Google, Inc. (WinUSB) AndroidUsbDeviceClass  (08/27/2012 7.0.0000.00004)": "08/27/2012 7.0.0000.00004",
        "Microsoft .NET AppHost Pack - 6.0.1 (x64_arm64)": "48.7.32725",
        "Microsoft Windows Desktop Targeting Pack - 6.0.0 (x64)": "48.3.31217",
        "Microsoft .NET Standard Targeting Pack - 2.1.0 (x64)": "24.0.28113",
        "Microsoft Windows Desktop Runtime - 6.0.1 (x64)": "48.7.32738",
        "Microsoft.NET.Sdk.iOS.Manifest-6.0.200": "60.50.4",
        "NVIDIA FrameView SDK 1.3.8513.32290073": "1.3.8513.32290073",
        "CUSPARSE Runtime": "12.0",
        "Microsoft .NET Toolset 6.0.200 (x64)": "24.4.48461",
        "Microsoft .NET SDK 7.0.402 (x64) from Visual Studio": "7.4.223.48029",
        "ShareX": "15.0.0",
        "Microsoft.NET.Sdk.tvOS.Manifest-6.0.200": "60.50.4",
        "Microsoft.NET.Sdk.tvOS.Manifest-6.0.100": "60.25.16415",
        "Zoom(64bit)": "5.14.17466",
        "Pandoc 2.19.2": "2.19.2",
        "Microsoft.NET.Sdk.macOS.Manifest-7.0.100 (x64)": "13.3.7107",
        "Microsoft .NET AppHost Pack - 6.0.2 (x64_arm)": "48.11.35878",
        "Microsoft.NET.Workload.Mono.Toolchain.net7.Manifest (x64)": "56.48.2548",
        "VNC Viewer 6.22.315": "6.22.315.46706",
        "Microsoft Visual C++ 2010  x64 Redistributable - 10.0.40219": "10.0.40219",
        "Mozilla Maintenance Service": "89.0.2",
        "NVIDIA Update 39.5.0.0": "39.5.0.0",
        "NVIDIA NvModuleTracker": "6.14.25214.24630",
        "CUDART Runtime": "12.0",
        "Git": "2.39.0",
        "Microsoft .NET Runtime - 6.0.23 (x64)": "48.92.2594",
        "cuxxfilt": "12.0",
        "Compute Sanitizer": "12.0",
        "NVIDIA ShadowPlay 3.27.0.112": "3.27.0.112",
        "NVIDIA NodeJS": "3.27.0.112",
        "CUSPARSE Development": "12.0",
        "Microsoft .NET Host FX Resolver - 5.0.10 (x64)": "40.40.30412",
        "Python 3.9.6 Documentation (64-bit)": "3.9.6150.0",
        "Microsoft ODBC Driver 17 for SQL Server": "17.5.1.1",
        "Node.js": "18.14.0",
        "Docker Desktop": "4.19.0",
        "NVIDIA NetworkService Container": "1.37",
        "CUBLAS Runtime": "12.0",
        "CUBLAS Development": "12.0",
        "Microsoft System CLR Types for SQL Server 2019": "15.0.2000.5",
        "CUPTI": "12.0",
        "Microsoft .NET AppHost Pack - 6.0.23 (x64_arm64)": "48.92.2594",
        "Microsoft Windows Desktop Runtime - 7.0.12 (x64)": "56.48.2562",
        "NVIDIA SHIELD Wireless Controller Driver": "3.27.0.94",
        "Universal CRT Tools x64": "10.1.22000.832"
      }
    }
  },
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:38 GMT",
    "ip": "::1",
    "commandOutput": {
      "curentUser": {
        "CertificateRevocation": 1,
        "DisableCachingOfSSLPages": 0,
        "IE5_UA_Backup_Flag": "5.0",
        "PrivacyAdvanced": 1,
        "SecureProtocols": 2048,
        "User Agent": "Mozilla/4.0 (compatible; MSIE 8.0; Win32)",
        "ZonesSecurityUpgrade": [
          195,
          60,
          53,
          101,
          245,
          253,
          217,
          1
        ],
        "WarnonZoneCrossing": 0,
        "EnableNegotiate": 1,
        "ProxyEnable": 0,
        "MigrateProxy": 1,
        "LockDatabase": 132705966228209420,
        "SecureProtocolsUpdated": 1,
        "PSPath": "Microsoft.PowerShell.Core\\Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings",
        "PSParentPath": "Microsoft.PowerShell.Core\\Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion",
        "PSChildName": "Internet Settings",
        "PSProvider": {
          "ImplementingType": "Microsoft.PowerShell.Commands.RegistryProvider",
          "HelpFile": "System.Management.Automation.dll-Help.xml",
          "Name": "Registry",
          "PSSnapIn": "Microsoft.PowerShell.Core",
          "ModuleName": "Microsoft.PowerShell.Core",
          "Module": null,
          "Description": "",
          "Capabilities": 16,
          "Home": "",
          "Drives": "HKLM HKCU",
          "VolumeSeparatedByColon": true,
          "ItemSeparator": "\\",
          "AltItemSeparator": "\\"
        }
      },
      "system": [
        "",
        "Current WinHTTP proxy settings:",
        "",
        "    Direct access (no proxy server).",
        ""
      ]
    }
  },
  {
    "timestamp": "Mon, 30 Oct 2023 17:59:38 GMT",
    "ip": "::1",
    "commandOutput": {
      "commandHistory": [
        "hashcat",
        ".\\hashcat.exe -h",
        ".\\hashcat.exe 2",
        "start .\\LaZagne.exe all",
        "neovim",
        "nvim",
        "ls",
        "clear",
        "type .\\unshadow.hashes",
        "clear",
        "ls",
        "type .\\unshadowed.cracked",
        "cat .\\unshadow.hashes",
        "clear",
        ".\\hashcat.exe",
        ".\\hashcat.exe --help",
        "netstat",
        "winget ",
        "winget search vim",
        "npm init",
        "code ",
        "code .",
        "npm install serialport",
        "node .\\index.js",
        "code .",
        "cd .\\arduino\\",
        "npm ",
        "npm list",
        "npm install body-parser",
        "node .\\index.js",
        "code .",
        "npm install express",
        "npm list ",
        "cd .\\mqtt\\",
        "npm list ",
        "npm install nodemon",
        "npm install mongoose",
        "node .\\index.js",
        "npm init",
        "npm install plotly",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\\"",
        "ls",
        "cd .\\Code\\",
        "npm list ",
        "npm install body-parser nodemon serialport",
        "code .",
        "code-tunnel.exe",
        "npm start",
        "npm start",
        "code .",
        "npm list ",
        "npm list ",
        "cd .\\web\\",
        "npm list",
        "npm install axios ",
        "npm install express --save",
        "npm install nodemon --save-dev",
        "code .",
        "npm start",
        "npm start",
        "code .",
        "npm start",
        "code .",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\Code>\"",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 Software Architecture and Scalibility in IOT\\Task 2.2C\\Code\"",
        "clear",
        "ls",
        "cd .\\serialcapture\\",
        "ls",
        "npm init",
        "npm list ",
        "cd .\\api\\",
        "cd .\\serialcapture\\",
        "clear",
        "clear",
        "npm list ",
        "npm list ",
        "npm install serialport body-parser mongoose",
        "npm list ",
        "npm install nodemon",
        "npm install nodemon .\\node_modules\\",
        "npm install nodemon --save-dev",
        "npm start ",
        "npm start ",
        "npm start ",
        "exit",
        "cd .\\web\\",
        "npm init",
        "npm list",
        "npm install nodemon --save-dev express --save mongoose axios body-parser ",
        "code .",
        "clear",
        "clear",
        "clear",
        "code .",
        "npm start ",
        "npm start ",
        "npm start",
        "npm start",
        "npm start ",
        "npm start",
        "code .",
        "cd .\\web\\",
        "npm list",
        "cd ..",
        "cd .\\api\\",
        "npm list",
        "cd ..",
        "cd .\\web\\",
        "code .",
        "cd ..",
        "cd .\\serialcapture\\",
        "code .",
        "npm list",
        "cat .\\models\\",
        "cat .\\mqtt.js",
        "code .",
        "cd ..",
        "cd .\\serialcapture\\",
        "npm list",
        "cd ..",
        "cd .\\api\\",
        "npm list",
        "cd ..",
        "cd .\\serialcapture\\",
        "code .",
        "cd ..",
        "ls",
        "code .",
        "exit",
        "ecit",
        "exit",
        "cd .\\serialcapture\\",
        "clear",
        "cd .\\api\\",
        "cd .\\web\\",
        "clear",
        "npm start",
        "npm start",
        "CLEAR",
        "npm start",
        "code .",
        "npm init ",
        "touch iotsensor.js",
        "code .",
        "node .\\iotsensor.js",
        "clear",
        "npm install mongoose",
        "code .",
        "mkdir models",
        "cd .\\models\\",
        "clear",
        "cd ..",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "cd ..",
        "cd '.\\Task 4.2C\\'",
        "pip3 install jupyter notebook",
        "jupyter notebook",
        "pip3 install plotly",
        "code .",
        "cd .\\Code\\",
        "npm install plotly",
        "code .",
        "node .\\testplot.js",
        "node .\\iotsensor.js",
        "code .",
        "node .\\iotsensor.js",
        "npm install plotly",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "code .",
        "cat .\\sky-websense-ext.c",
        "cat cat .\\iotsensor.js",
        "cat .\\iotsensor.js",
        "code .",
        "node .\\iotsensor.js",
        "git clone https://github.com/DataBytes-Organisation/Project-Echo.git",
        "ls",
        "code .",
        "cat .\\send_email.php",
        "code .",
        "npm init",
        "npm install nodemailer",
        "code .",
        "clear",
        "node .\\index.js",
        "code .",
        "npm list",
        "npm -h",
        "npm -version",
        "grep mongo",
        "np list",
        "npm list",
        "cd ..",
        "cat .\\Server.bat",
        "cat .\\server.js",
        "npm list",
        "code .",
        "npm init",
        "mongod.exe",
        "ping 54.206.185.165:27017",
        "ping 54.206.185.165",
        "code .",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "lear",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "code .",
        "cd '.\\Code Local\\'",
        "cd '.\\Code Remote\\'",
        "clear",
        "clear",
        "node .\\iotsensor.js",
        "node .\\iotsensor.js",
        "code ",
        "code .",
        "cat .\\iotsensor.js",
        "exit",
        "clear",
        "clear",
        "clear",
        "ls",
        "cd .\\api\\",
        "cd .\\serialcapture\\",
        "cd .\\web\\",
        "npm start",
        "npm start",
        "clear",
        "npm start",
        "npm start",
        "npm start",
        "Code .",
        "git clone https://github.com/jpwa1k/Project-Echo.git",
        "ls",
        "cd ..",
        "ls",
        "code .",
        "npm list ",
        "ls",
        "cat .\\package.json",
        "npm install mongoose nodemon cors express",
        "code .",
        "npm i mongoose-validator -S",
        "npm list ",
        "npm install body-parser ",
        "code .",
        "npm start",
        "npm start",
        "npm install ",
        "npm install swagger-jdoc swagger-ui-express",
        "npm install swagger-jsdoc swagger-ui-express",
        "clear",
        "npm update",
        "npm fund",
        "npm start",
        "code .",
        "cd test",
        "ls",
        "npm list",
        "code .",
        "cd test",
        "npm init",
        "npm init",
        "npm init",
        "npm install axios ",
        "npm install jest",
        "code .",
        "cd '.\\Code Local\\'",
        "ls",
        "cat .\\iotsensor.js",
        "npm start",
        "clear",
        "ls",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "code .",
        "code ",
        "code .",
        "clear",
        "node .\\iotsensor.js",
        "clear",
        "node .\\iotsensor.js",
        "code .",
        "cd .\\portal-api-test\\",
        "code .",
        "ls",
        "npm start",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm test",
        "clear",
        "npm test",
        "clear",
        "npm test",
        "code .",
        "npm init",
        "npm install express",
        "code .",
        "node .\\client.js",
        "cat .\\client.js",
        "node .\\client.js",
        "code .",
        "npm init",
        "npm install express",
        "npm list ",
        "npm list ",
        "npm install mongoose modemon body-parser",
        "npm install mongoose nodemon body-parser",
        "code .",
        "cat .\\sensor.js",
        "code .",
        "npm start",
        "npm start",
        "ls",
        "npm list",
        "ping 54.89.71.211:5000",
        "ping 54.89.71.211:5000 ",
        "npm init",
        "code .",
        "npm install mongoose nodemon body-parser express",
        "npm install aios",
        "npm install axios",
        "npm start",
        "code .",
        "cd .\\client-1.js\\",
        "cd .\\client-2.js\\",
        "exit",
        "exit",
        "clear",
        "cd .\\client-1.js\\",
        "cd ..",
        "cd .\\client-2.js\\",
        "cd .\\client-3.js\\",
        "clear",
        "clear",
        "clear",
        "npm start",
        "npm start",
        "npm start",
        "ping google.com",
        "dig google.com",
        "whois google.com",
        "host",
        "host 128.184.20.21",
        "clear",
        "host 128.184.20.21",
        "host -t mx deakin.edu.au",
        "ping deakin.edu.au",
        "host localhost",
        "npm init ",
        "npm install express nodemon mongoose",
        "npm list ",
        "npm install axios",
        "tree .",
        "tree ",
        "code .",
        "codec. ",
        "clear",
        "code. ",
        "clear",
        "code .",
        "npm init",
        "ls",
        "npm install express",
        "code .",
        "npm start",
        "touch ",
        "node",
        "clear",
        "node --version",
        "celar",
        "clear",
        "docker build --tag node-docker .",
        "celar",
        "clear",
        "celar",
        "docker build --tag node-docker .",
        "docekr images",
        "docker images",
        "docker run node-docker",
        "docker run --publish 3000:3000 node-docker",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 6.2C\\Docker Code>\"",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 6.2C\\Docker Code\"",
        "ls",
        "clear",
        "ls",
        "docker build --tag node-docker .",
        "docker images",
        "docker run --publish 3000:3000 node-docker",
        "clear",
        "cat .\\Dockerfile",
        "cat .\\server.js",
        "cat .\\.dockerignore",
        "mqtt ",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/#",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/testing -m \"test\"",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /myid/device",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
        "device test\"",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/users -m \"my user`",
        "test\"",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
        "clear",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
        "device test\"",
        "clear",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
        "device test\"",
        "celar",
        "clang32.exe",
        "clear",
        "clear",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/device",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /221538173/device -m \"my`",
        "device test\"",
        "npm init",
        "clear",
        "npm install mqtt",
        "code .",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 8.2P\\Code\"",
        "ls",
        "clear",
        "cd ..",
        "ls",
        "clear",
        "mkdir server",
        "cd .\\server\\",
        "npm init",
        "clear",
        "ls",
        "npm install mqtt",
        "clear",
        "code .",
        "clear",
        "cd \"{\"",
        "console.log(\"Topic is: \" + topic)",
        "console.log(\"Message is: \" + message)",
        "clear",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT314 - Software Architecture and Scalibility in IOT\\Task 8.2P\\Code\"",
        "cd..",
        "clear",
        "ls",
        "cd .\\server\\",
        "clear",
        "npm start",
        "npm start",
        "clear",
        "npm start",
        "code .",
        "explorer.exe",
        "explorer.exe ,",
        "explorer.exe .",
        "npm start",
        "code .",
        "host localhost",
        "npm init",
        "clea",
        "clear",
        "code .",
        "npm install multer path express crypto",
        "clear",
        "npm install ejs body-parser mongoose multer multer-gridfs-storage gridfs-stream method-override",
        "npm audit",
        "npm install nodemon --save-dev",
        "npm run dev",
        "ls",
        "npm install express",
        "npm run dev",
        "clear",
        "npm run dev",
        "npm start",
        "npm init",
        "npm install express",
        "npm install cors",
        "npm install multer",
        "code .",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "code .",
        "npm install multer",
        "npm install crypto",
        "npm start",
        "code .",
        "npm install mqtt",
        "code .",
        "code ,",
        "code .",
        "npm install mqtt",
        "npm start",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /drone-data",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
        "npm install nodemon --save-dev",
        "clear",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
        "clear",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
        "clear",
        "npm start",
        "clear",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
        "cleanmgr.exe",
        "clear",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone-data -m \"test\"",
        "npm start",
        "clear",
        "npm start",
        "clear\\",
        "clear",
        "npm start",
        "clear",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "Get-CIMInstance -ClassName win32_DiskDrive",
        "code ,",
        "code .",
        "clear",
        "npm start ",
        "code .",
        "code ",
        "npm start ",
        "code .",
        "npm start",
        "ls",
        "cat .\\package-lock.json",
        "cat .\\package.json",
        "npm run test",
        "npm install --save jest supertest",
        "npm run test",
        "code .",
        "npm, start ",
        "npm start ",
        "dec .",
        "code .",
        "neovim",
        "nvim",
        "code .",
        "clear",
        "cd .\\apis\\",
        "cd .\\portal-api\\",
        "ls",
        "clear",
        "cd .\\web\\",
        "npm start",
        "npm i",
        "npm start",
        "npm install morgan ",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "cd ..",
        "code .",
        "npm start",
        "clear",
        "cd .\\web\\",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "npm start ",
        "npm start",
        "npm install nodemon --save-dev",
        "code .",
        "clear",
        "clear",
        "cd .\\apis\\",
        "cd .\\portal-api\\",
        "npm start ",
        "cd .\\web\\",
        "code .",
        "clear",
        "clear",
        "cd .\\web\\",
        "npm start ",
        "npm install nodemailer morgan ",
        "npm start ",
        "cd .\\apis\\",
        "cd .\\portal-api\\",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "cd .\\apis\\portal-api\\",
        "npm start ",
        "code .",
        "cd .\\web\\",
        "npm start",
        "clear",
        "npm start",
        "npm install randomstring",
        "npm start",
        "npm install dotenv",
        "npm start",
        "code .",
        "cd",
        "code .",
        "cd .\\api\\",
        "npm install express nodemon mongoose",
        "code .",
        "cd ..",
        "cd '.\\Task 8.2P\\'",
        "code .",
        "cd ..",
        "cd '.\\Task 8.3C\\'",
        "code .",
        "npm list ",
        "npm list",
        "npm init -y",
        "npm install node-pdm",
        "git clone https://github.com/atomic14/esp32_wireless_microphone.git",
        "cd .\\esp32_wireless_microphone\\",
        "code .",
        "cd .\\mqtt-api\\",
        "cd .\\mqtt\\",
        "npm list",
        "npm install body-parser express mongoose mqtt nodemon ",
        "npm init -y",
        "cd ..",
        "cd .\\api\\",
        "npm init -y",
        "scoop update windows-terminal",
        "exit",
        "cat .\\client.js",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /221538173/snort",
        "code .",
        "cd .\\apis\\portal-api\\",
        "npm start ",
        "cd .\\tests\\",
        "ls",
        "cd .\\portal-api-test\\",
        "clear",
        "npm run test",
        "clear",
        "npm start ",
        "npm run test",
        "npm start ",
        "npm, install dotenv",
        "npm install dotenv",
        "npm start ",
        "clear",
        "npm start ",
        "npm run test",
        "clear",
        "\"G:\\Software Engineering\\Semester 5\\SIT374 - Capstone Team Project (A)\\Hardhat Website - AppAttack\\website\\tests\"",
        "clear",
        "ls",
        "clear",
        "cd \"G:\\Software Engineering\\Semester 5\\SIT374 - Capstone Team Project (A)\\Hardhat Website - AppAttack\\website\\tests\"",
        "cd .\\portal-api-test\\",
        "celar",
        "clear",
        "npm run test",
        "npm start ",
        "cel;ar",
        "clear",
        "cel;ar",
        "clar",
        "clear",
        "npm run test",
        "nano",
        "ls",
        "cd .\\portal-api\\",
        "code .",
        "docker build -t web-api .",
        "docker build -t web-api .",
        "sudo docker run -p 6060:6060 web-api",
        "docker run -p 6060:6060 web-api",
        "clear",
        "code .",
        "ls",
        "cd .\\source-code\\",
        "cd .\\front-end\\",
        "ls",
        "clear",
        "npm init -y",
        "npm install react-bootstrap bootstrap",
        "yarn",
        "npm install express nodemon mongoose",
        "npm install react react-dom",
        "npm install react react-scripts",
        "cd ..",
        "cd .\\web-api\\",
        "npm i express",
        "npm i nodemon -D",
        "npm dev",
        "npm run dev",
        "npm i date-fns uuid",
        "npm run dev",
        "npm i cookie-parser",
        "npm i cors",
        "npm i dotenv",
        "code .",
        "ls",
        "cd .\\apis\\portal-api\\",
        "ls",
        "npm i",
        "code .",
        "code .",
        "cd ..",
        "clear",
        "code .",
        "code ..",
        "cd ..",
        "clear",
        "ls",
        "code .",
        "ls",
        "cd .\\web-api\\",
        "npm i express-async-handler bcrypt",
        "code .",
        "clear",
        "npm run dev",
        "ls",
        "cd .\\web-api\\",
        "npm run dev",
        "celar",
        "clear",
        "npm run dev",
        "clear",
        "npm run dev",
        "code .",
        "npx create-react-app my-react-app",
        "npx create-react-app smart-lighting",
        "npm strat ",
        "npm start",
        "clear",
        "cd .\\smart-lighting\\",
        "npm start",
        "clear",
        "npm i react-router--dom",
        "npm i react-router-dom",
        "clear",
        "npm install react-bootstrap bootstrap",
        "git clone https://github.com/gitdagray/mern_stack_course.git",
        "cd .\\mern_stack_course\\",
        "code .",
        "cd .\\apis\\portal-api\\",
        "npm start",
        "ls",
        "npm start",
        "npm i",
        "npm start",
        "code .",
        "npm start",
        "npm i react-router--dom",
        "npm run dev",
        "clear",
        "ls",
        "cd .\\front-end\\",
        "ls",
        "cd .\\smart-lighting\\",
        "lsd",
        "ls",
        "npm start",
        "code .",
        "npm start",
        "cd .\\front-end\\",
        "ls",
        "cd .\\smart-lighting\\",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "cd .\\front-end\\smart-lighting\\",
        "npm start",
        "npm i spline",
        "npm start",
        "npm i @reduxjs/toolkit react-redux ",
        "ls",
        "cd .\\web-api\\",
        "ls",
        "npm start ",
        "cd .\\front-end\\smart-lighting\\",
        "npm start",
        "clear",
        "code .",
        "cd ..",
        "ls",
        "code .",
        "npm start ",
        "clear",
        "ls",
        "cd .\\front-end\\",
        "ls",
        "cd .\\smart-lighting\\",
        "npm start",
        "cd..",
        "ls",
        "cd .\\web-api\\",
        "clear",
        "npm start",
        "npm run dev",
        "code .",
        "ls",
        "cd test",
        "clear",
        "npm init -y",
        "code .",
        "ls",
        "cd .\\web-api\\",
        "ls",
        "cd .\\front-end\\smart-lighting\\",
        "clear",
        "npm start ",
        "code .",
        "npm start ",
        "npm start ",
        "code .",
        "npm start ",
        "npm run dev",
        "code .",
        "ls",
        "cd .\\web\\",
        "ls",
        "npm run",
        "npm start",
        "code .",
        "cd .\\front-end\\",
        "ls",
        "npm init ",
        "npm install express nodemon ",
        "code .",
        "la",
        "ls",
        "npm start ",
        "npm install cors",
        "npm start ",
        "code .",
        "npm init -y",
        "npm install nodemon --save-dev express mongoose mqtt",
        "npm start",
        "npm start",
        "npm install nodemon --save-dev express mongoose mqtt",
        "npm start",
        "clear",
        "npm start",
        "yes",
        "npm start",
        "yes",
        "npm start",
        "code .",
        "npm start",
        "code .",
        "npm start",
        "code .",
        "npm start",
        "code .",
        "clear",
        "npm start",
        "code .",
        "npm init -y",
        "npm install mqtt",
        "code .",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/1/battery -m \"{battery:5}\"",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/2/battery -m \"{battery:5}\"",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drone/2/battery -m \"{battery:5}\"",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m \"{battery:5}\"",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m \"{battery:5}\"",
        "npm start",
        "mqtt publish -h broker.hivemq.com -p 1883 -t /drones/2/battery -m {battery:5}",
        "npm start",
        "mqtt subscribe -h broker.hivemq.com -p 1883 -t /drones/1/battery",
        "npm start",
        "npm init -y",
        "npm install mqtt",
        "code .",
        "npm start",
        "npm install nodemon",
        "npm start",
        "npm install nodemon",
        "npm start",
        "clear",
        "npm start",
        "clear",
        "clear",
        "npm start",
        "clear",
        "npm start ",
        "clear",
        "npm start",
        "cd .\\server\\",
        "npm start",
        "cd .\\drone\\",
        "npm start",
        "node .\\client.js",
        "clear",
        "clear",
        "npm start",
        "node .\\client.js",
        "node .\\client.js",
        "code .",
        "code.",
        "code .",
        "git clone https://github.com/microsoft/vcpkg.git",
        "cd .\\vcpkg\\",
        "ls",
        "cd ..",
        "rm -r .\\vcpkg\\",
        "explorer.exe .",
        "rm -r .\\vcpkg\\",
        "git clone https://github.com/microsoft/vcpkg.git",
        "cd .\\vcpkg\\",
        "bootstrap-vcpkg.bat",
        ".\\bootstrap-vcpkg.bat",
        ".\\vcpkg.exe install 7zip",
        ".\\vcpkg.exe integrate install",
        "tree .",
        "net localgoup",
        "net localgroup",
        "net user charanpreet singh",
        "net user charanpreet",
        "npm init -y",
        "code .",
        "npm install express nodemon ",
        "code .",
        "npm run dev",
        "npm install mongoose body-parser",
        "code .",
        "npm run dev",
        "code .",
        "npm help",
        "npm uninstall mongoose",
        "npm uninstall body-parser",
        "clear",
        "npm uninstall body-parser",
        "npm run dev",
        "npm install express express-session cookie-parser",
        "npm run dev",
        "npm install express mongoose nodemon",
        "npm init -y",
        "npm install express mongoose nodemon",
        "code .",
        "npm start",
        "npm run dev",
        "clear",
        "npm start",
        "clear",
        "npm start",
        "npm rund ev",
        "npm run dev",
        "npm run dev",
        "clear",
        "clear",
        "npm start",
        "npm start",
        "Hostname",
        "(Get-WmiObject Win32_OperatingSystem).Caption",
        "Get-WmiObject",
        "Get-ComputerInfo  | select windowsversion",
        "(Get-CimInstance Win32_operatingsystem).OSArchitecture",
        "Get-ComputerInfo | Select-Object OSName",
        "Get-ComputerInfo | Select-Object OSName, WindowsVersion",
        "Get-ComputerInfo | Select-Object OSName, WindowsVersion, OsArchitecture",
        "Get-LocalUser",
        "Get-WmiObject -Class Win32_Product",
        "Get-WinEvent -ProviderName msiinstaller | where id -eq 1033 | select timecreated,message | FL *",
        "$InstalledSoftware = Get-ChildItem \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\"",
        "foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host \" - \" -NoNewline; write-host $obj.GetValue('DisplayVersion')}",
        "$InstalledSoftware = Get-ChildItem \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\"",
        "foreach($obj in $InstalledSoftware){write-host $obj.GetValue('DisplayName') -NoNewline; write-host \" - \" -NoNewline; write-host $obj.GetValue('DisplayVersion')}",
        "Get-WebApplicationProxyConfiguration",
        "[System.Net.WebProxy]::GetDefaultProxy() | select address",
        "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\"",
        "netsh winhttp show proxy",
        "    Get-ChildItem HKCU:\\Software\\SimonTatham\\PuTTY\\Sessions",
        "Get-History",
        "Get-ChildItem 'HKCU:\\Software\\SimonTatham\\PuTTY\\Sessions'",
        "Get-Item -Path \"Registry::KHEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
        "Get-Item -Path \"Registry::HCEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal ServerClient\\Servers\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers\\\" | ft",
        "Get-RDUserSession -ConnectionBroker \"rdcb.contoso.com\"",
        "code .",
        "Get-EventLog security -after (Get-date -hour 0 -minute 0 -second 0) | ?{$_.eventid -eq 4624 -and $_.Message -match 'logon type:\\s+(10)\\s'} | Out-GridView",
        "Get-Item -Path \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Server\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Servers\\\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
        "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" | Select ProxyServer, ProxyEnable | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\"",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\" | ft",
        "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Jumplist\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit\" | ft",
        "Get-Item -Path Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\\bandit\" | ft",
        "Get-LocalUser",
        "Get-WinEvent -ProviderName msiinstaller | where id -eq 1033 | select timecreated,message | FL *",
        "ls",
        ".\\code.ps1",
        "Get-LocalUser",
        ".\\code.ps1",
        "code .",
        "rsync",
        "npm init -y",
        "code .",
        "npm install body-parser express ",
        "npm install nodemon",
        "code .",
        "npm start",
        "ls",
        "npm start",
        "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
        "const express = require('express');",
        "const bodyParser = require('body-parser');",
        "const fs = require('fs');",
        "const app = express();",
        "const port = process.env.PORT || 3000;",
        "// Create a write stream to the log file",
        "const logStream = fs.createWriteStream('api_logs.txt', { flags: 'a' });",
        "// Parse JSON request body",
        "app.use(bodyParser.json());",
        "// Define a route to handle the POST request",
        "app.post('/api/endpoint', (req, res) => {`",
        "    const { CommandOutput } = req.body;`",
        "`",
        "    // Get the IP address from which the request is generated`",
        "    const clientIp = req.ip;`",
        "`",
        "    // Log the IP address and received command output to the log file`",
        "    const logData = `${new Date().toUTCString()} - IP: ${clientIp}, CommandOutput: ${JSON.stringify(CommandOutput)}\\n`;`",
        "    logStream.write(logData);`",
        "`",
        "    // Respond with a success message`",
        "    res.status(200).json({ message: 'Command output received successfully' });`",
        "});",
        "// Start the Express server",
        "app.listen(port, () => {`",
        "    console.log(`Server is running on port ${port}`);`",
        "});",
        "npm install fs --save`",
        "",
        "npm start",
        "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
        "npm start",
        "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
        "Get-Date  | ConvertTo-Json",
        "powershell -ExecutionPolicy ByPass -File \"d:\\MCSI\\Write a Windows host enumeration program\\code.ps1\"",
        "npm start",
        "powershell --version",
        "powershell -v",
        "powershell -h",
        "powershell -Version",
        "Powershell -Version",
        "Powershell | -Help | -Version",
        "$PSVersionTable.PSVersion",
        "netsh winhttp show proxy",
        "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\"",
        "Get-ItemProperty -Path \"Registry::HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" | Select ProxyServer, ProxyEnable | ft",
        "npm start",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Sessions\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\Jumplist\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\SimonTatham\\PuTTY\\SshHostKeys\" | ft",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Terminal Server Client\\Default\\\" | ft",
        "Get-History",
        "Get-Item -Path \"Registry::HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU\" | ft",
        "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt | Select-String \"keyword\"",
        "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt ",
        "Get-Content -Path C:\\Users\\YourUsername\\Documents\\WindowsPowerShell\\ConsoleHost_history.txt",
        "cat (Get-PSReadlineOption).HistorySavePath",
        "(Get-PSReadlineOption).HistorySavePath",
        "cat (Get-PSReadlineOption).HistorySavePath",
        " (Get-PSReadlineOption).HistorySavePath",
        "clear",
        "cat (Get-PSReadlineOption).HistorySavePath",
        ".\\code.ps1",
        "cat (Get-PSReadlineOption).HistorySavePath",
        "clear",
        "cat (Get-PSReadlineOption).HistorySavePath",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "Get-Content (Get-PSReadlineOption).HistorySavePath",
        ".\\code.ps1",
        "npm start",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        "cat (Get-PSReadlineOption).HistorySavePath",
        "clear",
        "Get-Content (Get-PSReadlineOption).HistorySavePath",
        "Get-History | Format-List -Property *",
        "Get-Content (Get-PSReadlineOption).HistorySavePath  | Format-List -Property *",
        "Get-Content (Get-PSReadlineOption).HistorySavePath\u0002",
        "Get-Content (Get-PSReadlineOption).HistorySavePath",
        "clear",
        "Get-Content (Get-PSReadlineOption).HistorySavePath",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "npm start",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1",
        "clear",
        ".\\code.ps1"
      ]
    }
  }
]